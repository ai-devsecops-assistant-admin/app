# golangci-lint configuration for artifact gateway template
# https://golangci-lint.run/usage/configuration/

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  modules-download-mode: readonly
  allow-parallel-runners: true

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters:
  disable-all: true
  enable:
    - errcheck        # Check for unchecked errors
    - gosimple        # Simplify code
    - govet           # Vet examines Go source code
    - ineffassign     # Detect ineffectual assignments
    - staticcheck     # Go static analysis
    - unused          # Check for unused constants, variables, functions and types
    - typecheck       # Type-check Go code
    - gofmt           # Check code is gofmt-ed
    - goimports       # Check import statements are formatted
    - misspell        # Spell checker
    - revive          # Drop-in replacement for golint
    - gosec           # Security problems
    - unconvert       # Remove unnecessary type conversions
    - dupl            # Code clone detection
    - goconst         # Find repeated strings that could be replaced by a constant
    - gocyclo         # Cyclomatic complexity
    - bodyclose       # Check HTTP response body is closed
    - noctx           # Find http requests without context.Context
    - rowserrcheck    # Check if sql.Rows.Err is checked
    - sqlclosecheck   # Check sql.Rows and sql.Stmt are closed
    - stylecheck      # Stylecheck is a replacement for golint
    - whitespace      # Detection of leading and trailing whitespace

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - (io.Closer).Close
      - (*os.File).Close

  govet:
    check-shadowing: true
    enable-all: true

  gocyclo:
    min-complexity: 20

  dupl:
    threshold: 150

  goconst:
    min-len: 3
    min-occurrences: 3

  misspell:
    locale: US

  revive:
    confidence: 0.8
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: redefines-builtin-id

  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G104 # Audit errors not checked (covered by errcheck)
      - G304 # File path provided as taint input

  stylecheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    dot-import-whitelist: []
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "SIP", "RTP", "AMQP", "DB", "TS"]

issues:
  exclude-use-default: false
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false

  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - goconst

    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

  # Show all issues from a linter
  exclude:
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*printf?|os\\.(Un)?Setenv). is not checked"
    - "should have a package comment, unless it's in another file for this package"

severity:
  default-severity: error
  rules:
    - linters:
        - dupl
      severity: info
    - linters:
        - goconst
      severity: info
