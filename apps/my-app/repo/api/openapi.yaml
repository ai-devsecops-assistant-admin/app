openapi: 3.0.3
info:
  title: Platform Governance API
  description: API for DevSecOps platform governance and compliance
  version: 1.0.0
  contact:
    name: Platform Team
    email: platform-team@example.com

servers:
  - url: https://api.example.com/v1
    description: Production
  - url: https://api-staging.example.com/v1
    description: Staging
  - url: http://localhost:8080/v1
    description: Development

paths:
  /health:
    get:
      summary: Health check
      operationId: healthCheck
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /ready:
    get:
      summary: Readiness check
      operationId: readinessCheck
      tags:
        - Health
      responses:
        '200':
          description: Service is ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadyResponse'

  /metrics/dashboard:
    get:
      summary: Get dashboard metrics
      operationId: getDashboardMetrics
      tags:
        - Metrics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dashboard metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardMetrics'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /validate/naming:
    post:
      summary: Validate resource naming
      operationId: validateNaming
      tags:
        - Validation
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamingValidationRequest'
      responses:
        '200':
          description: Validation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamingValidationResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /resources:
    get:
      summary: List resources
      operationId: listResources
      tags:
        - Resources
      security:
        - bearerAuth: []
      parameters:
        - name: environment
          in: query
          schema:
            type: string
            enum: [dev, staging, prod]
        - name: type
          in: query
          schema:
            type: string
        - name: compliant
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of resources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          example: healthy
        timestamp:
          type: string
          format: date-time

    ReadyResponse:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          example: ready
        timestamp:
          type: string
          format: date-time

    DashboardMetrics:
      type: object
      required:
        - namingComplianceRate
        - totalResources
        - violations
        - autoFixedIssues
      properties:
        namingComplianceRate:
          type: number
          format: float
          minimum: 0
          maximum: 100
        totalResources:
          type: integer
          minimum: 0
        violations:
          type: integer
          minimum: 0
        autoFixedIssues:
          type: integer
          minimum: 0

    NamingValidationRequest:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
          example: prod-my-app-api-deploy-v1.0.0
        type:
          type: string
          example: deployment

    NamingValidationResponse:
      type: object
      required:
        - valid
      properties:
        valid:
          type: boolean
        violations:
          type: array
          items:
            type: string
        suggestedName:
          type: string

    Resource:
      type: object
      required:
        - id
        - name
        - type
        - environment
        - isCompliant
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        environment:
          type: string
          enum: [dev, staging, prod]
        namespace:
          type: string
        isCompliant:
          type: boolean
        complianceScore:
          type: number
          format: float
        lastCheckedAt:
          type: string
          format: date-time

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        code:
          type: string
        details:
          type: object

  responses:
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
