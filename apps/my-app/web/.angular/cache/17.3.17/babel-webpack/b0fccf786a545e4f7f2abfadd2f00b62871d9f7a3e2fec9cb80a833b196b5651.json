{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(error => {\n        if (error.status === 401) {\n          this.authService.logout();\n          this.router.navigate(['/login']);\n        }\n        return throwError(() => error);\n      }));\n    }\n    static {\n      this.ɵfac = function ErrorInterceptor_Factory(t) {\n        return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ErrorInterceptor,\n        factory: ErrorInterceptor.ɵfac\n      });\n    }\n  }\n  return ErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}